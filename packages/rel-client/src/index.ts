import { generate } from "@genql/cli"
import path from "path"
import fsUtils from "fs-utils"

type GenerateArgs = {
  schema: string
  outputPath: string
}

export async function generateClient(args: GenerateArgs) {
  const { schema, outputPath } = args

  await generate({
    schema,
    output: path.join(outputPath, "generated"),
    headers: {},
    sortProperties: true,
  }).catch(console.error)

  // @todo - generate top level client
  await fsUtils.writeFileSync(
    path.join(outputPath, "index.ts"),
    `// Autogenerated by Rel (https://rel.run). Do not modify this file directly.

import { getStoredToken } from "rel-bundle/client";
import { createClient } from "./generated/index";

export * from "rel-bundle/client";
export * from "./generated/index";

const url = process.env.NEXT_PUBLIC_REL_URL || "http://localhost:4000/graphql"

export default createClient({
  url,
  headers: () => ({
    Authorization: getStoredToken(),
    'x-auth-token': getStoredToken(),
  }),
});`
  )
}
